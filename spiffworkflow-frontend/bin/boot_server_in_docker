#!/usr/bin/env bash

function error_handler() {
  echo >&2 "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

# sort of like https://lithic.tech/blog/2020-05/react-dynamic-config, but without golang
react_configs=$(env | grep -E "^SPIFFWORKFLOW_FRONTEND_RUNTIME_CONFIG_" || echo '')
if [[ -n "$react_configs" ]]; then
  index_html_file="/usr/share/nginx/html/index.html"
  if [[ ! -f "$index_html_file" ]]; then
    echo >&2 "ERROR: Could not find '${index_html_file}'. Cannot use SPIFFWORKFLOW_FRONTEND_RUNTIME_CONFIG values without it."
    exit 1
  fi

  if ! command -v sed >/dev/null; then
    echo >&2 "ERROR: sed command not found. Cannot use SPIFFWORKFLOW_FRONTEND_RUNTIME_CONFIG values without it."
    exit 1
  fi

  while IFS= read -r react_config; do
    if [ -z "$react_config" ]; then continue; fi

    KEY_AND_VALUE=${react_config#SPIFFWORKFLOW_FRONTEND_RUNTIME_CONFIG_}
    KEY=${KEY_AND_VALUE%%=*}
    VALUE=${KEY_AND_VALUE#*=}

    # Safely encode the value as a JSON string using sed.
    # 1. Escape backslashes.
    # 2. Escape double quotes.
    # 3. Wrap the entire string in double quotes.
    ENCODED_VALUE=$(echo "$VALUE" | sed -e 's/\\/\\\\/g' -e 's/"/\\"/g' | sed 's/.*/"&"/')

    # Construct the JavaScript assignment.
    JS_ASSIGNMENT="window.spiffworkflowFrontendJsenv.${KEY}=${ENCODED_VALUE};"

    # Escape for sed replacement string. Using | as delimiter.
    # The delimiter is not actually used in the final sed, but this is safe.
    SED_REPLACEMENT=$(echo "$JS_ASSIGNMENT" | sed -e 's/\\/\\\\/g' -e 's/&/\\&/g' -e 's/\//\\\//g')

    # Inject the assignment before the closing </script> tag on the line
    # containing window.spiffworkflowFrontendJsenv.
    sed -i.bak "/window\.spiffworkflowFrontendJsenv/ s/<\/script>/; ${SED_REPLACEMENT}<\/script>/" "$index_html_file"
    rm -f "${index_html_file}.bak"

    if ! grep -qF -- "${JS_ASSIGNMENT}" "$index_html_file"; then
      echo >&2 "ERROR: Could not find '${JS_ASSIGNMENT}' in '${index_html_file}' after search and replace."
      exit 1
    fi
  done <<<"$react_configs"
fi

port_to_use="${PORT0:-80}"
if [[ -n "${SPIFFWORKFLOW_FRONTEND_INTERNAL_PORT:-}" ]]; then
  port_to_use="$SPIFFWORKFLOW_FRONTEND_INTERNAL_PORT"
fi
sed "s/\\{\\{SPIFFWORKFLOW_FRONTEND_INTERNAL_PORT\\}\\}/${port_to_use}/" /var/tmp/nginx.conf.template >/etc/nginx/conf.d/default.conf

exec nginx -g "daemon off;"
